---
title: "Splice modulators target PMS1 to reduce somatic expansion of the Huntingtonâ€™s disease-associated CAG repeat"
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: true
    toc-depth: 2
    page-layout: full
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 

# delete all files in output dir to make sure they are generated each render and there's not carryover with name changes

do.call(file.remove, list(list.files("outputs/", full.names = TRUE)))


```

```{r}
library(tidyverse)
library(marginaleffects)
library(ggforce)
library(patchwork)
library(ggtext)
library(ggridges)

```

Custom functions

```{r}

me_fold_calculator <- function(me_predictions, 
                               fold_var_name, 
                               fold_var_group_denom,
                               split_var_name = NULL, 
                               rev = FALSE){
  
  me_predictions_df <- as.data.frame(me_predictions)
  
  # split dataframe into list
  
  if(is.null(split_var_name)) {
    df_list <- list(me_predictions_df)
    } 
  else{
    df_list <- split(me_predictions_df, me_predictions_df[,split_var_name])
  }
  
  # calculate fold change and CIs for each entry
  
  for (i in seq_along(df_list)) {
    
    if(!is.null(split_var_name)){
      print(names(df_list[i]))
    }
    
    df <- df_list[[i]]
    fold_var_position <- which(df[, fold_var_name] == fold_var_group_denom)

    df_conf <- data.frame(
      comparison = paste0(df[, fold_var_name], " - ", rep(fold_var_group_denom, length(df[, fold_var_name]))),
      fold = sapply(df[,"estimate"], function(x) x / df[fold_var_position ,"estimate"]),
      conf.low = sapply(df[,"conf.high"], function(x) x / df[fold_var_position,"estimate"]), 
      conf.high = sapply(df[,"conf.low"], function(x) x / df[fold_var_position,"estimate"])
    ) |>
      filter(comparison != paste0(fold_var_group_denom, " - ", fold_var_group_denom))
    
    # reverse direction of fold change for foldchange reductions    
    
    if(rev) {
      df_conf <- df_conf |>
        mutate(across(2:4, function(x) -1*(1/x)))
    }
    
    print(df_conf)
  }
  

}



```

# Figure 1

## Figure 1c

```{r}

fig1c_data <- read_csv("data/fig1/fig1c.csv") |>
  mutate(peak = factor(peak,
                       levels = c("Exon 49-50", "Exon 49-50a-50", "Exon 49-50b")),
         drug = factor(drug, 
                       labels = c("Branaplam", "Risdiplam"))) |>
  select(treatment, average_prop, peak, drug)

(fig1c_g <-  fig1c_data %>%
  ggplot(aes(x = as.factor(treatment), y = average_prop, fill = fct_rev(peak))) +
  geom_col() + 
  facet_grid(cols = vars(drug), scales = "free_x", space = "free_x") +
  # scale_fill_viridis_d(begin = 0.97, end = 0.3,option = "viridis") +
  scale_fill_brewer(palette = "Pastel2") +
  labs(y = "Band proportion", x = "Concentration (nM)", fill = "Splice product") +
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
        legend.position = "none") )

```

## Figure 1d

```{r}

fig1d_data <- read_csv("data/fig1/fig1d.csv") |>
  mutate(upstream_ss = factor(upstream_ss,
                              levels = c("G","C","A","T")),
         treatment = ifelse(str_detect(treatment, "Bran"), "100 nM\nBranaplam", treatment)) |>
  select(upstream_ss, average_prop, peak_name, treatment)

(fig1d_g <- fig1d_data |>
  ggplot(aes(x = upstream_ss, y = average_prop, fill = fct_rev(peak_name))) +
  geom_col() + 
  facet_wrap(vars(fct_rev(treatment))) +
  scale_fill_manual(values = c("#F4CAE4",
                               RColorBrewer::brewer.pal(n = 3, "Pastel2"))) +
  theme_minimal() +
    labs(y = "Band proportion",
         x = "Minigene exon 49\nfinal nucleotide",
         fill = "Splice product"))
  

```

```{r}
fig1_g <- fig1c_g + fig1d_g  + 
  plot_layout(widths = c(0.6,0.4)) +
  plot_annotation(tag_levels = list(c("c", "d")))

ggsave("outputs/fig1.pdf",
       fig1_g,
       width = 7.5,
       height = 2.5)
```

# Figure 2

## Figure 2a

```{r}

fig2a_data <- read_csv("data/fig2/fig2a_gnomad.csv") |>
  select(position, allele_frequency, have_cell_lines, rs_i_ds)

(fig2a_g <-  fig2a_data |>
  ggplot(aes(position, allele_frequency)) +
  geom_vline(xintercept = c(3215349, 3215463),
             lty = 3,
             alpha = 0.5) +
  geom_vline(xintercept = c(3214291, 3214436, 3215685, 3215862),
             alpha = 0.5) +
  geom_point(aes(colour = have_cell_lines),
             alpha = 0.5) +
  ggrepel::geom_label_repel(
             data = fig2a_data[which(fig2a_data$have_cell_lines == TRUE),] |>
                        distinct(position, allele_frequency, rs_i_ds),
             aes(label = rs_i_ds),
             size = 2,
             fill = alpha(c("white"),0.5)) +
  scale_y_log10(minor_breaks = NULL) +
  scale_x_continuous(breaks = c(3214000, 3214500, 3215000, 3215500),
                     minor_breaks = NULL) +
  annotation_logticks(outside = FALSE, sides = "l") +
  theme_minimal() +
    labs(colour = "Variant\nrepresented\nin cell lines\ntested", y = "MAF", x = "GRCh37 chr4 position",
         title = "HTT intron 49") +
    theme(legend.position = "none",
          plot.title = element_text(hjust = 0.5, size = 10,
                                    margin = margin(),
                                    vjust = -5))

)




```

## Figure 2b

```{r}
fig2b_data <- read_csv("data/fig2/fig2b_cell_lines.csv") |>
  select(rs362331_status, rs_i_ds, position, treatment,
         cell_line_unique_number, can_peak_prop, experiment, ratio_50b_50a)


fig2b_rs362331 <- fig2b_data |>
  filter(rs362331_status == "0/1",
         !rs_i_ds %in% c("rs145498084", "rs772437678")) |>
  mutate(rs_i_ds = "rs362331",
         position = 3215735)

fig2b_plot_data <- fig2b_data |>
  bind_rows(fig2b_rs362331) |>
    mutate(rs_i_ds = fct_reorder(rs_i_ds, position),
           rs_i_ds = fct_relevel(rs_i_ds,
                                 "Reference",
                                 after = length(unique(rs_i_ds))))



cell_line_total <- fig2b_plot_data |>
  group_by(treatment, rs_i_ds) |>
  summarise(n = n(),
            cell_lines = n_distinct(cell_line_unique_number)) |>
  ungroup() |>
  complete(treatment, rs_i_ds, fill = list(n = 0, cell_lines = 0))


(fig2b_g <- fig2b_plot_data |>
  ggplot(aes(rs_i_ds, can_peak_prop)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(width = 0.23,alpha = 0.5) +
  geom_text(data = cell_line_total,
            aes(rs_i_ds, 1.21,
                label = paste0(cell_lines, "\n",n)),
            size = 2) +
  geom_text(data = data.frame(treatment = unique(fig2b_data$treatment),
                              label = rep("N= \nn=",3)),
            aes(0.75, 1.21, label = label),
            size = 2) +
  geom_blank(aes(y = 1.3)) +
  ggforce::facet_col(vars(fct_rev(treatment))) +
  scale_y_continuous(breaks = c(0,0.5,1),
                     minor_breaks = NULL) +
  labs(y = "Canonical exon 49-50 band proportion", x = "Variant",
       colour = "Treatment") +
  theme_bw() +
  theme(strip.background =element_rect(fill="white"),
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1),
        axis.title.x = element_blank()) 
)

```

### Branaplam stats

```{r}

fig_2b_lm_bran <- fig2b_data %>%
  mutate(rs_i_ds = ifelse(is.na(rs_i_ds), "ref", rs_i_ds)) %>%
  filter(str_detect(treatment, "Branaplam")) %>%
  lme4::lmer(can_peak_prop ~ rs_i_ds + rs362331_status + (1 | experiment), data = .)

avg_comparisons(fig_2b_lm_bran) |>
  knitr::kable()

```

### Risdiplam stats

```{r}


fig_2b_lm_ris <- fig2b_data %>%
  mutate(rs_i_ds = ifelse(is.na(rs_i_ds), "ref", rs_i_ds)) %>%
  filter(str_detect(treatment, "Risdiplam")) %>%
  lm(can_peak_prop ~ rs_i_ds, data = .)


summary(fig_2b_lm_ris)

```

### 50b/50a raio for variants

```{r}
fig2b_data %>%
  mutate(rs_i_ds = ifelse(is.na(rs_i_ds), "ref", rs_i_ds)) %>%
  filter(str_detect(treatment, "Branaplam")) %>%
  lme4::lmer(ratio_50b_50a ~ rs_i_ds + rs362331_status + (1 | experiment), data = .) |>
  avg_comparisons() |>
  knitr::kable()

```

## Figure 2c

```{r}
fig2c_data <- read_csv("data/fig2/fig2c_ddPCR_data.csv") |>
  select(treatment, rsid, cell_line,rel_dmso, treatment)



fig2c_numbers <- fig2c_data |> 
  group_by(treatment, rsid) |>
  summarise(n = n(),
            N = length(unique(cell_line)))

(fig2c_g <- fig2c_data |>
  ggplot(aes(rsid,  rel_dmso)) +
  geom_boxplot(outlier.shape = NA) +
  ggforce::geom_sina(maxwidth = 0.75, 
                     position = position_dodge(width = 0.75),
                     alpha = 0.5) +
  geom_text(data = fig2c_numbers,
            aes(x = rsid, y = 4, label = paste0(N,"\n",n)),
            size = 2) +
  geom_text(data = data.frame(treatment = unique(fig2c_data$treatment),
                              label = rep("N= \nn=",2)),
            aes(x = 0.8, y = 4, label = label),
            size = 2) +
  facet_wrap(vars(fct_rev(treatment))) +
  scale_color_brewer(palette = "Set2") +
  scale_y_log10(limits = c(NA,5),
                breaks = c(0.1,1)) +
  annotation_logticks(sides = "l", outside = TRUE) +
  coord_cartesian(clip = "off") + # Ticks outside plot
  labs(y = "Log10 <i>HTT</i> ex49-ex50<br>expression relative to DMSO") +
  theme_bw() +
  theme(legend.position="none",
        axis.title.y = ggtext::element_markdown(),
        axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        axis.text.y = element_text(margin = margin(0,10,0,0)),
        axis.title.x = element_blank(),
        strip.background =element_rect(fill="white"), 
        panel.grid.major.x = element_line(),
        panel.grid.major.y = element_line()
  )
)



```

```{r}


fig2 <- ((fig2a_g / fig2c_g) | fig2b_g )+  plot_annotation(tag_levels = list(c("a","c","b")))

ggsave("outputs/fig2.pdf",
       fig2,
       width = 7.5,
       height = 5)

```

# Figure 3

## Figure 3c

```{r}

fig3c_data <- read_csv("data/fig3/fig3c_data_edu.csv") |>
  select(days_conf, positive_cell_count, total_cell_count)
  
(

fig3c_g <- fig3c_data |>
  ggplot(aes(as.factor(days_conf), positive_cell_count / total_cell_count)) +
  geom_boxplot(outlier.shape = NA) +
  geom_jitter(alpha = 0.1,
              size = 0.5) +
  theme_minimal() +
  labs(y = "Edu positive / total nuclei",
       x = "Days confluent")
)


```

## Figure 3d

```{r}
fig3d_data <- read_csv("data/fig3/fig3d_data_traces.csv") |>
  mutate(
    facet_label = case_when(days == 0 ~ "Day 0",
                               dox == "Non-induced" ~ "Day 28 Non-induced",
                               dox == "Induced" ~ "Day 28 Induced"),
    facet_label = factor(facet_label,
                               levels = c(unique(facet_label)[1],
                                          unique(facet_label)[3],
                                          unique(facet_label)[2]))
   ) |>
  filter(strain == 23) |>
  select(repeats, rel_signal, dox, modal_repeat, facet_label)

(fig3d_g <-  fig3d_data |>
  ggplot(aes(repeats, rel_signal, colour = dox)) +
  geom_line() + 
  geom_vline(aes(xintercept = modal_repeat),
             lty = 3) +
  facet_wrap(vars(facet_label), ncol = 1) +
  labs(x = "CAG repeat",
       y = "",
       fill = "Day") +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        panel.grid.major.y  = element_blank(),
        panel.grid.minor.y  = element_blank(),
        legend.position = "none")
)




```

## Figure 3e

```{r}

fig3e_data <- read_csv("data/fig3/fig3e_data_traces.csv") |>
  mutate(
    facet_label = case_when(division == "D0" ~ "Day 0",
                            division == "Non-dividing" ~ "Day 48 Non-dividing",
                            division == "Dividing" ~ "Day 48 Dividing"),
   facet_label = factor(facet_label,
                        levels = c(unique(facet_label)[1],
                                   unique(facet_label)[3],
                                   unique(facet_label)[2]))
  ) |>
  select(repeats, rel_signal, dox, modal_repeat, facet_label)

(fig3e_g <-  fig3e_data |>
  ggplot(aes(repeats, rel_signal, colour = dox)) +
  geom_line() + 
  geom_vline(aes(xintercept = modal_repeat),
             lty = 3) +
  facet_wrap(vars(facet_label), ncol = 1) +
  labs(x = "CAG repeat",
       y = "",
       fill = "Day") +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        panel.grid.major.y  = element_blank(),
        panel.grid.minor.y  = element_blank(),
        legend.position = "none")
)



```

## Figure 3f

```{r}
fig3f_data <- read_csv("data/fig3/fig3f_data_division_gain.csv") |>
  mutate(day = as.factor(day)) |>
  select(day, division, dox, average_repeat_gain)

fig3f_numbers <- fig3f_data |>
  count(day, division, dox)

(
fig3f_g <- fig3f_data |>
  ggplot(aes(day, average_repeat_gain)) +
  geom_boxplot(aes(colour = dox),
               outlier.shape = NA) +
  ggforce::geom_sina(aes(colour = dox),
                     alpha = 0.5) +
  geom_text(data = fig3f_numbers,
      aes(x = day, y = 18.5, label = n, colour = dox),
      size = 2.5,
      position = position_dodge(width = 0.75)) +
  geom_text(data = data.frame(label = "n=", division = "Non-dividing"),
            aes(x = c(0.8), y = 18.5, label = label),
            size = 2.5) +
  facet_wrap(vars(fct_rev(division))) +
  theme_minimal() +
  labs(y = "Average repeat gain",
       x = "Day", 
       colour = "")

)
```

```{r}
fig3f_mod <- fig3f_data |>
  mutate(day = as.numeric(as.character(day))) |>
  lm(average_repeat_gain ~ 0 + day:division + day:dox , data = _)


fig3f_mod |>
  avg_comparisons()

```

What is the gain total?

```{r}
fig3f_mod |>
  predictions(newdata = datagrid(
    day = 48,
    division = unique(fig3f_data$division),
    dox = unique(fig3f_data$dox)
    )) |>
  select(division, dox, estimate, conf.low, conf.high) |>
  as.data.frame()


```

effect of division?

```{r}

fig3f_mod |>
  avg_predictions(by = "division") |>
  me_fold_calculator(fold_var_name = "division",
                     fold_var_group_denom = "Non-dividing")
```

## Figure 3g

```{r}
fig3g_data <- read_csv("data/fig3/fig3g_data_flow.csv") |>
  select(GFP.A, name, dox)

(

fig3g_g <- fig3g_data |>
  ggplot(aes(x = GFP.A + 0.01,
             y = name,
             fill = fct_rev(dox))
         ) +
  geom_density_ridges() +
  scale_x_log10(labels = scales::label_log(),
                limits = c(3*10^0, 3*10^4)) +
  labs(x = "GFP signal",
       y = "") +
  theme_minimal() +
  theme(legend.position = "none")

)

```

```{r}


fig3g_mod <- lm(GFP.A~name, data = fig3g_data)



avg_predictions(fig3g_mod,
                by = "name") |>
  me_fold_calculator("name", "RPE1\r\nnon-induced")

avg_predictions(fig3g_mod,
                by = "name") |>
  me_fold_calculator("name", "RPE1-AAVS1-CAG115\r\nnon-induced")




```

## Figure 3h

```{r}

fig3h_data <- read_csv("data/fig3/fig3h_data_expression.csv") |>
  mutate(assay = ifelse(assay == "PPP1R12C exon 1-2 (from transgene chromosome)",
                        "PPP1R12C ex. 1-2 (from transgene chr.)", assay),
         assay = fct_relevel(assay, "EGFP", after = 2),
         assay = gsub("PPP1R12C","<i>PPP1R12C</i>",assay),
         assay = gsub("EGFP","<i>EGFP</i>",assay),
         assay = gsub("PuroR","<i>PuroR</i>",assay)) |>
  select(rel_expression, dox_status, assay)

(
fig3h_g <- fig3h_data |>
  ggplot(aes( rel_expression, dox_status, colour = dox_status)) +
  stat_summary(fun = "median", size = 0.5, geom = "crossbar", position = position_dodge()) +
  ggforce::geom_sina() +
  facet_wrap(vars(assay), ncol = 1) +
  scale_x_log10(labels = scales::label_log()) +
  annotation_logticks(sides = "b") +
  labs(y = "",
       x = "Relative expression") +
  theme_bw() +
  theme(legend.position = "none",
        strip.background =element_rect(fill="white"),
        strip.text = ggtext::element_markdown(size = 8))
)
```

```{r}

fig3h_assays <- unique(fig3h_data$assay)

for (i in seq_along(fig3h_assays)) {
  
  print(paste0(fig3h_assays[i], "----------------------------------"))
  
  fig3h_mod <- fig3h_data |>
    filter(assay == fig3h_assays[i]) |>
    mutate(dox_status = fct_rev(dox_status)) |>
    lm(rel_expression ~ dox_status, data = _)


  fig3h_mod |>
    avg_comparisons() |>
    print()

  fig3h_mod |>
    avg_predictions(by = "dox_status") |>
    me_fold_calculator(fold_var_name = "dox_status",
                       fold_var_group_denom = "Non-induced",
                       rev = ifelse(fig3h_assays[i] == "<i>EGFP</i>", FALSE, TRUE))|>
    print()
  
}




```

```{r}

fig3h_mod <- fig3h_data |>
  mutate(dox_status = fct_rev(dox_status)) |>
  lm(rel_expression ~ assay * dox_status, data = _)


fig3h_mod |>
  predictions(by = c("assay", "dox_status")) |>
  filter(dox_status == "Non-induced",
         assay %in% c("<i>EGFP</i>", "<i>PuroR</i>")) |>
  me_fold_calculator(fold_var_name = "assay",
                     fold_var_group_denom = "<i>PuroR</i>")
```

## Figure 3 combined plots

```{r}

fig3_top <- plot_spacer() + fig3c_g  + fig3d_g +
  plot_annotation(tag_levels = list(c("c","d")))
fig3_middle <- fig3e_g + fig3f_g  +
  plot_annotation(tag_levels = list(c("e","f")))
fig3_bottom <- fig3g_g + fig3h_g +
  plot_annotation(tag_levels = list(c("g", "h")))


ggsave("outputs/fig3_top.pdf",
       fig3_top,
       height = 2.5,
       width = 7.5)

ggsave("outputs/fig3_middle.pdf",
       fig3_middle,
       height = 2.5,
       width = 7.5)

ggsave("outputs/fig3_bottom.pdf",
       fig3_bottom,
       height = 2.5*1.5,
       width = 7.5)
```

# Figure 4

## Figure 4a

```{r}
fig4a_data <- read_csv("data/fig4/fig4c_traces_data.csv") |>
  mutate(ko = gsub("FAN1","<i>FAN1</i>",ko),
         ko = gsub("MSH3","<i>MSH3</i>",ko),
         ko = gsub("PMS1","<i>PMS1</i>",ko),
         ko = fct_relevel(ko,
                          "Empty vector")) |>
  select(repeats, rel_signal, ko, culture_day, modal_repeat)


(fig4a_g <- fig4a_data |>
  ggplot(aes(repeats, rel_signal, colour = ko)) +
  geom_line(linewidth = 0.05) +
  geom_vline(aes(xintercept = modal_repeat ),
             lty = 3,
             linewidth = 0.75,
             colour = "black") +
  facet_grid(culture_day ~ ko) +
  scale_colour_viridis_d(option = "inferno", end = 0.8 ) +
  scale_y_continuous(minor_breaks = NULL) +
  scale_x_continuous(minor_breaks = NULL) +
  theme_minimal() +
  theme(legend.position = "none",
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 5),
        strip.text = ggtext::element_markdown(size = 8.5)) +
  labs(x = "CAG repeat length", y = "Relative signal intensity", title = "Pooled edited populations"))


```

## Figure 4b

```{r}
fig4b_data <- read_csv("data/fig4/fig4d_ko_repeat_gain.csv") |>
  mutate(ko = gsub("FAN1","<i>FAN1</i>",ko),
         ko = gsub("MSH3","<i>MSH3</i>",ko),
         ko = gsub("PMS1","<i>PMS1</i>",ko),
         ko = fct_relevel(ko,
                          "Empty vector")) |>
  select(ko, culture_day, average_repeat_gain)

fig4b_numbers <- fig4b_data |>
  group_by(ko, culture_day) |>
  summarise(n = n()) 

(fig4b_g <- fig4b_data |>
  ggplot(aes(as.factor(culture_day), average_repeat_gain)) +
  geom_boxplot(aes(colour = ko),
               outlier.shape = NA,
               size = 0.25) +
  ggforce::geom_sina(aes(colour = ko),
                     alpha = 0.7,
                     shape = 21) +
  geom_text(data = fig4b_numbers,
        aes(y = 20, label = paste0(n)),
        size = 2.5) +
  geom_text(data = data.frame(ko = unique(fig4b_data$ko)[4],
                              label = "n="),
            aes(x = 0.7, y = 20, label = label),
            size = 2.5) +
  facet_wrap(vars(ko), nrow = 1) +
  scale_colour_viridis_d(option = "inferno", end = 0.8 ) +
  labs(x = "Day", colour = "group", y = "Average repeat gain", title = "Pooled edited populations") +
  theme_minimal() +
  theme(legend.position = "none",
        strip.text = ggtext::element_markdown(size = 8.4))
)
  

```

```{r}
fig4b_lm <- fig4b_data %>%
  lm(average_repeat_gain ~ 0 + culture_day:as.factor(ko), data = .)
```

### average repeat gain per week

```{r}
slopes(fig4b_lm,
       variables = "culture_day",
       by = "ko") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  as.data.frame() |>
  knitr::kable()

```

### FAN1-KO vs Empty vector

```{r}
slopes(fig4b_lm,
       variables = "culture_day",
       by = "ko",
       hypothesis = "b1-b4 = 0") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()
```

### PMS1-KO vs Empty vector

```{r}
slopes(fig4b_lm,
       variables = "culture_day",
       by = "ko",
       hypothesis = "b2-b4 = 0") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()
```

### MSH3-KO vs Empty vector

```{r}
slopes(fig4b_lm,
       variables = "culture_day",
       by = "ko",
       hypothesis = "b2-b4 = 0") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()
```

## Figure 4e

```{r}

fig4c_data <- read_csv("data/fig4/fig4e_data_KO_strains.csv") |>
  filter(!is.na(weighted_repeat_gain)) |>
  mutate(gene_geno = gsub("MSH3","<i>MSH3</i>",gene_geno),
         gene_geno = gsub("PMS1","<i>PMS1</i>",gene_geno),
         gene_geno = fct_relevel(gene_geno,
                          "+/+")) |>
  select(day, gene_geno, cell_strain,weighted_repeat_gain)

fig4c_numbers <- fig4c_data |>
  group_by(day,gene_geno) |>
  summarise(N = length(unique(cell_strain)),
            n = n()) 

msh3_col <- scales::viridis_pal(option = "inferno", end = 0.8 )(4)[3]
pms1_col <- scales::viridis_pal(option = "inferno", end = 0.8 )(4)[4]

(fig4c_g <- fig4c_data |>
  ggplot(aes(as.factor(day),weighted_repeat_gain, colour = gene_geno)) +
  geom_boxplot(outlier.shape = NA,
               size = 0.25) +
  ggforce::geom_sina(shape = 21,
                     alpha = 0.5) +
  geom_text(data = fig4c_numbers,
            aes(x = as.factor(day), y = 12, label = paste0(N, "\n", n)),
            colour = "black",
            size = 2.5) +
  geom_text(data = data.frame(gene_geno = unique(fig4c_data$gene_geno)[2],
                              label = "N=\nn="),
            aes(x = 0.65, y = 12, label = label),
            size = 2.5,
            colour = "black") +
  facet_wrap(vars(gene_geno), nrow = 1) +
  scale_y_continuous(limits = c(NA,13)) +
  scale_color_manual(values = 
                       c(msh3_col,
                         msh3_col,
                         pms1_col,
                         pms1_col)
  ) +
  labs(y = "Average repeat gain", x = "Day", title = "Clonal edited strains") +
  theme_minimal() +
  theme(legend.position = "none",
        strip.text = ggtext::element_markdown(size = 8.4))
)
```

```{r}


fig4c_data |>
  filter(day != 0) |>
  lm(weighted_repeat_gain ~ day * gene_geno, data = _) |>
  avg_comparisons(variables = list(gene_geno = "pairwise"))  |>
  knitr::kable()

```

```{r}

fig4_top_row <- fig4a_g
fig4_bottom_row <- fig4b_g + fig4c_g + plot_layout(widths = c(0.6,0.4)) 

fig4 <- fig4_top_row/ fig4_bottom_row + 
  plot_annotation(tag_levels = "a")


ggsave("outputs/fig4.pdf",
       fig4,
       width = 7.5,
       height = 5)
```

# Figure 5

## Figure 5a

```{r}
plot_average_repeat_gain = function(df){
  
  df |>
    ggplot(aes(as.factor(day), average_repeat_gain)) +
    geom_boxplot(aes(colour = as.factor(concentration)),
                 position = position_dodge2(preserve = "single"), 
                 outlier.shape = NA) +
    geom_point(aes(colour = as.factor(concentration)),
                 position = position_jitterdodge(),
               shape = 21,
               alpha = 0.5) +
    labs(colour = "Concentration\n(nM)",
         y = "Average repeat gain",
         x = "Day") +
    theme_minimal() +
    scale_y_continuous(limits = c(-0.5,4.5)) +
    scale_colour_viridis_d(option = "mako", end = 0.8) +
    # scale_colour_brewer(palette = "Set2", na.value = "gray60") +
    theme(legend.title = element_text(size = 8.5))
  }
```

```{r}
fig5a_data <- read_csv("data/fig5/fig5a_data_bran_instability.csv") |>
  select(day, average_repeat_gain, concentration)

(fig5a_g <- fig5a_data |> 
 plot_average_repeat_gain()

)
```

```{r}
fig5a_lm <- fig5a_data %>%
  lm(average_repeat_gain ~ 0 + day:as.factor(concentration), data = .)
```

### All slopes

```{r}
slopes(fig5a_lm,
       variables = "day",
       by = "concentration") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()
```

### 25 nM vs DMSO

```{r}
slopes(fig5a_lm,
       variables = "day",
       by = "concentration",
       hypothesis = "b2-b1 = 0") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()
```

### 100 nM vs DMSO

```{r}
slopes(fig5a_lm,
       variables = "day",
       by = "concentration",
       hypothesis = "b3-b1 = 0") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()

```

## Figure 5b

```{r}
fig5b_data <- read_csv("data/fig5/fig5a_data_ris_instability.csv") |>
  select(day, average_repeat_gain, concentration)

(fig5b_g <- fig5b_data |> 
 plot_average_repeat_gain()
)

```

```{r}
fig5b_lm <- fig5b_data %>%
  lm(average_repeat_gain ~ 0 + day:as.factor(concentration), data = .)
```

### All slopes

```{r}
slopes(fig5b_lm,
       variables = "day",
       by = "concentration") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()
```

### 100 nM vs DMSO

```{r}
slopes(fig5b_lm,
       variables = "day",
       by = "concentration",
       hypothesis = "b2-b1 = 0") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()
```

### 500 nM vs DMSO

```{r}
slopes(fig5b_lm,
       variables = "day",
       by = "concentration",
       hypothesis = "b3-b1 = 0") |>
  mutate(across(c("estimate", "conf.low", "conf.high"),
                function(x) x * 7)) |>
  knitr::kable()

```

## Figure 5c

```{r}
fig5c_data <- read_csv("data/fig5/fig5c_data.csv") |>
  mutate(drug_conc = ifelse(drug_conc == "500 nM Ris", "500 nM Ris.", drug_conc),
         drug_conc = fct_relevel(drug_conc, "DMSO")) |>
  select(drug_conc, Total_Masses)
  

(
fig5c_g <- fig5c_data |>
  ggplot(aes(drug_conc, Total_Masses)) +
  geom_boxplot(outlier.shape = NA) +
  ggforce::geom_sina(
    shape = 21,
    alpha = 0.2) +
  scale_y_log10() +
  annotation_logticks(sides = "l") +
  theme_minimal() +
  labs(y = "Log10 Cytotox stained\nobjects per field of view", x = "") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust =1),
        axis.text.y = element_text(margin = margin(0,10,0,0)),
        legend.position = "none")
)

```

```{r}

fig5c_data |>
  lm(Total_Masses ~ drug_conc, data = _) |>
  summary() 

```

## Figure 5d

```{r}
fig5d_data <- read_csv("data/fig5/fig5d_data.csv") |>
  mutate(drug_conc = ifelse(drug_conc == "500 nM Ris", "500 nM Ris.", drug_conc),
         drug_conc = fct_relevel(drug_conc, "DMSO"))  |>
  select(drug_conc, Mean)


(fig5d_g <- fig5d_data |>
  ggplot(aes(drug_conc, Mean)) +
  geom_boxplot(outlier.shape = NA) +
  ggforce::geom_sina(
    shape = 21,
                     alpha = 0.2) +
  theme_minimal() +
  labs(y = "Average autofluorescence\npixel intensity",
       x = "") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust =1),
        axis.text.y = element_text(margin = margin(0,10,0,0)),
        legend.position = "none")
)
```

```{r}

fig5d_data |>
  lm(Mean ~ drug_conc, data = _) |>
  summary()

```

```{r}
fig5_top <- fig5a_g + fig5b_g +
  plot_annotation(tag_levels = "a")


ggsave("outputs/fig5_top.pdf",
       fig5_top,
       width = 7.5,
       height = 2.5)

fig5_bottom <- fig5c_g + fig5d_g  + 
  plot_annotation(tag_levels = list(c("c", "d")))

ggsave("outputs/fig5_bottom.pdf",
       fig5_bottom,
       width = 7.5,
       height = 2.5)

```

# Figure 6

## Figure 6b

```{r}
fig6b_data <- read_csv("data/fig6/fig6c_data_pms1_dose.csv") |>
  select(treatment, peak_prop, drug)

(fig6b_g <- fig6b_data %>%
  ggplot(aes(treatment, peak_prop, colour = drug)) +
  geom_point(shape = 1) +
  scale_x_log10() +
  scale_colour_brewer(palette = "Set2") +
  # stat_summary(fun = median, geom = "point") +
  geom_smooth(method = 'loess') +
  labs(y = "Canonical\nband proportion", x = "Concentration (nM)", colour = "Drug") +
  theme_minimal()+ 
  annotation_logticks(sides = "b", outside = TRUE) +
  coord_cartesian(clip = "off") +
  theme(axis.text.x = element_text(margin = margin(8))))

```

```{r}

fig6_g <- fig6b_g + 
  plot_annotation(tag_levels = list(c("b")))

ggsave("outputs/fig6.pdf",
       fig6_g,
       width = 3.75,
       height = 2)

```

# Figure 7

## Figure 7c

```{r}
fig7c_data <- read_csv("data/fig7/fig7c_data_ddPCR.csv") |>
    mutate(treatment = str_replace(treatment, "nM\nBranaplam", "nM Bran."),
           genotype = gsub("PMS1","<i>PMS1</i>",genotype),
           genotype = gsub("delta", "&Delta;", genotype)) |>
    filter(target == "PMS1") |>
  select(genotype, treatment, cell_line, rel_dmso, ratio)


fig7c_numbers <- fig7c_data |>
  group_by(genotype, treatment) |>
  summarise(N = length(unique(cell_line)),
            n = n())


(fig7c_g <- fig7c_data |>
  ggplot(aes(fct_rev(treatment), rel_dmso)) +
  geom_boxplot() +
  geom_point(aes(colour = cell_line),
             position = position_dodge(width = 0.5),
                     size = 2,
                     alpha = 0.5) +
  geom_text(data = fig7c_numbers,
            aes(x = fct_rev(treatment), y = 1.5,
                label = paste0(N,"\n", n)),
            size = 2) +
  geom_text(data = data.frame(label = rep("N=\nn="),
                              genotype = unique(fig7c_data$genotype)),
            aes(x = 0.8, y = 1.5, label = label),
            size = 2) +
  scale_colour_viridis_d() +
  scale_y_continuous(limits = c(0,1.6),
                     breaks = c(0,0.25,0.5,0.75, 1),
                     minor_breaks = NULL) +
  facet_wrap(vars(fct_rev(genotype))) +
  theme_bw() +
  labs(y = "PMS1 exon 5-6 expression\nrelative to median DMSO", x = "") +
  theme(strip.background =element_rect(fill="white"),
        legend.position = "none",
        axis.text.x = element_text(angle = 45, hjust = 1, vjust =1),
        axis.text.y = element_text(margin = margin(0,10,0,0)),
        strip.text = ggtext::element_markdown()
        ))


```

Are PMS1 delta PE cells different to WT for non-treated?

```{r}
fig7c_lm_ratio <-  lm(ratio ~ genotype * treatment, data = fig7c_data)

```

```{r}

comparisons(fig7c_lm_ratio,
            variables = list(genotype = rev(unique(fig7c_data$genotype))),
            newdata = datagrid(treatment = c("DMSO"))) 


```

effect of treatment

```{r}
fig7c_lm <-  lm(rel_dmso ~ genotype * treatment, data = fig7c_data)
```

```{r}
comparisons(
  fig7c_lm,
  variables = list(treatment = unique(fig7c_data$treatment)),
  newdata = datagrid(genotype = rev(unique(fig7c_data$genotype)))
  )

predictions(
  fig7c_lm,
  variables = list(treatment = unique(fig7c_data$treatment)),
  newdata = datagrid(genotype = rev(unique(fig7c_data$genotype)))
  ) |>
  me_fold_calculator(fold_var_name = "treatment", 
                     fold_var_group_denom = "DMSO",
                     split_var_name = "genotype",
                     rev = TRUE)

```

is the effect in wt and PMS1 delta PE cells different?

```{r}
comparisons(
  fig7c_lm,
  variables = list(treatment = unique(fig7c_data$treatment)),
  newdata = datagrid(genotype = rev(unique(fig7c_data$genotype))),
  hypothesis = "b1 = b2"
  ) |>
  as.data.frame() |>
  knitr::kable()


```

## Figure 7d

```{r}
fig7d_data <- read_csv("data/fig7/fig7d_data_instability1.csv") |>
  mutate(treatment = str_replace(treatment, "nM\n", "nM "),
         treatment = fct_relevel(treatment,
                                 "DMSO"),
         genotype = gsub("PMS1","<i>PMS1</i>",genotype),
         genotype = gsub("HTT","<i>HTT</i>",genotype),
         genotype = gsub("delta", "&Delta;", genotype),
         genotype = gsub("\n", " ", genotype),
         genotype = fct_relevel(genotype,
                                "WT")) |>
  select(cell_line, genotype, treatment, normalised_gain)

fig7d_numbers <- fig7d_data |>
  group_by(genotype, treatment) |>
  summarise(N = length(unique(cell_line)),
            n = n())

(fig7d_g <- fig7d_data |>
  ggplot(aes(genotype, normalised_gain)) +
  geom_hline(yintercept = 1,
             lty = 3) +
  geom_boxplot(outlier.shape = NA) +
  ggforce::geom_sina(aes(colour = as.factor(cell_line)),
                     size = 1.5,
                     alpha = 0.5) +
  geom_text(data = fig7d_numbers,
            aes(x = genotype, y = 1.75,
                label = paste0(N,"\n", n)),
            size = 2) +
  geom_text(data = data.frame(label = rep("N=\nn="),
                              genotype = unique(fig7d_data$genotype)),
            aes(x = 0.73, y = 1.75, label = label),
            size = 2) +
  scale_colour_viridis_d() +
  scale_y_continuous(limits = c(0, 1.86)) +
  facet_wrap(vars(treatment), nrow = 1, scales = "free_x") +
  labs(x = "", y = "Repeat gain\nrelative to DMSO", colour = "Genotype clone") +
  theme_bw() +
  theme(strip.background =element_rect(fill="white"),
        legend.position = "none",
        axis.text.y = element_text(margin = margin(0,10,0,0)),
        panel.grid.minor.y = element_blank(),
        axis.text.x = ggtext::element_markdown(angle = 45, hjust = 1, vjust =1),
        strip.text = element_text(size = 7.4)
        ))


```

```{r}
fig7d_lm <- fig7d_data %>%
  lm(normalised_gain ~ cell_line + genotype * treatment, data = .)


comparisons(fig7d_lm,
                   variables = list(treatment = "pairwise"),
                   newdata = datagrid(genotype = unique(fig7d_data$genotype))
                   ) |>
  arrange(genotype)


predictions(fig7d_lm,
            newdata = datagrid(
              treatment = unique(fig7d_data$treatment),
              genotype = unique(fig7d_data$genotype)
            )) |>
  me_fold_calculator(fold_var_name = "treatment",
                     fold_var_group_denom = "DMSO",
                     split_var_name = "genotype",
                     rev = TRUE)




```

Is the PMS1 delta PE risdiplam treatment reduced as much as the WT for the same treatment?

```{r}
comparisons(fig7d_lm,
            variables = list(treatment = unique(fig7d_data$treatment)[c(1,3)]),
            newdata = datagrid(genotype = unique(fig7d_data$genotype)[c(1,3)]),
            hypothesis = "b1 = b2"
) 


```

## Figure 7e

```{r}
fig7e_data <- read_csv("data/fig7/fig7e_data_instability2.csv") |>
  mutate(genotype = gsub("PMS1","<i>PMS1</i>",genotype),
         genotype = gsub("delta", "&Delta;", genotype),
         genotype = gsub("\n", " ", genotype),
         genotype = fct_relevel(genotype,
                                "WT"),
         treatment = str_replace(treatment, "nM\n", "nM "),
         treatment = fct_relevel(treatment,
                                 "DMSO")) |>
  select(genotype, treatment, cell_line, normalised_gain)

fig7e_numbers <- fig7e_data |>
  group_by(genotype, treatment) |>
  summarise(N = length(unique(cell_line)),
            n = n())

(fig7e_g <- fig7e_data |>
  ggplot(aes(genotype, normalised_gain)) +
  geom_hline(yintercept = 1, lty = 3) +
  geom_boxplot(position = position_dodge(),
               outlier.shape = NA) +
  geom_text(data = fig7e_numbers,
            aes(x = genotype, y = 1.75,
                label = paste0(N,"\n", n)),
            size = 2) +
  geom_text(data = data.frame(label = rep("N=\nn="),
                              genotype = unique(fig7e_data$genotype)),
            aes(x = 0.75, y = 1.75, label = label),
            size = 2) +
  ggforce::geom_sina(aes(colour = as.factor(cell_line)),
                     size = 2,
                     alpha = 0.5) +
  scale_colour_viridis_d() +
  scale_y_continuous(limits = c(0, 1.86),
                     breaks = c(0, 0.5, 1, 1.5)) +
  facet_wrap(vars(treatment), nrow = 1, scales = "free_x") +
  labs(x = "", y = "Repeat gain\nrelative to DMSO", colour = "Genotype clone") +
  theme_bw() +
  theme(strip.background =element_rect(fill="white"),
        legend.position = "none",
        axis.text.x = ggtext::element_markdown(angle = 45, hjust = 1, vjust =1),
        axis.text.y = element_text(margin = margin(0,10,0,0)),
        panel.grid.minor.y = element_blank(),
        strip.text = element_text(size = 7.4)
        ))

```

```{r}
fig7e_lm <- fig7e_data |>
  lm(normalised_gain ~ cell_line + genotype * treatment, data = _)


comparisons(
  fig7e_lm,
  variables = list(treatment = "pairwise"),
  newdata = datagrid(genotype = unique(fig7e_data$genotype))
) |>
  arrange(genotype)




predictions(fig7e_lm,
            newdata = datagrid(
              treatment = unique(fig7e_data$treatment),
              genotype = unique(fig7e_data$genotype)
            )) |>
  me_fold_calculator(fold_var_name = "treatment",
                     fold_var_group_denom = "DMSO",
                     split_var_name = "genotype",
                     rev = TRUE)

```

same change with 100 or 200 nM for the different genotypes?

100 nM

```{r}
comparisons(
  fig7e_lm,
  variables = list(treatment = unique(fig7e_data$treatment)[1:2]),
  newdata = datagrid(genotype = unique(fig7e_data$genotype)),
  hypothesis = "b1 = b2"
) |>
  as.data.frame() |>
  knitr::kable()
```

200 nM

```{r}
comparisons(
  fig7e_lm,
  variables = list(treatment = unique(fig7e_data$treatment)[c(1,3)]),
  newdata = datagrid(genotype = unique(fig7e_data$genotype)),
  hypothesis = "b1 = b2"
) |>
  as.data.frame() |>
  knitr::kable()

```

```{r}
fig7_top <- plot_spacer() + fig7c_g + plot_layout(widths = c(0.65,0.35)) 
fig7_bottom <- fig7d_g + fig7e_g  + plot_layout(widths = c(0.9,1.0)) 

fig7_g <- fig7_top / fig7_bottom + 
  plot_annotation(tag_levels = list(c("c", "d", "e")))


ggsave("outputs/fig7.pdf",
       device = cairo_pdf,
       fig7_g,
       width = 7.5,
       height = 6)


```

# Figure 8

## Figure 8a

```{r}

fig8a_data <- read_csv("data/fig8/fig8a_data_overlap.csv") |>
  mutate(
    across(c("denominator", "numerator"), \(x) str_replace(x, " et","\net")),
    denominator = fct_rev(denominator)) |>
  select(numerator, denominator, percent,n_genes, n,drug)

(
fig8a_g <- fig8a_data |>
  ggplot(aes(numerator, denominator, fill = percent, label = n_genes)) +
  geom_tile() +
  geom_text(colour = "white",
            size = 2.5, fontface='bold') +
  geom_text(data = fig8a_data |> filter(n == n_genes),
            colour = "black",
            size = 2.5, fontface='bold') +
  facet_wrap(vars(drug)) +
  scale_fill_viridis_c(na.value="white") +
  labs(y = "",
       x = "",
       fill = "Overlap\nproportion") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 6),
        axis.text.y = element_text(size = 6),
        ) 

)
```

## Figure 8c

```{r}

fig8c_data <- read_csv("data/fig8/fig8c_spliceai_data.csv") |>
  filter(allele_freq > 0) |>
  select(allele_freq, splice_ai_score, exon_annotation, gene_symbol, drug)


(fig8c_g <-  fig8c_data |>   
  ggplot(aes(allele_freq, splice_ai_score)) + 
  geom_point(aes(colour = exon_annotation),
             alpha = 0.5) +
  ggrepel::geom_label_repel(data = fig8c_data |>
                              filter(allele_freq > 0.01 & splice_ai_score > 0),
                            aes(label = gene_symbol),
                            ylim = c(0.5,2),
                            force = 5,
                            fill = alpha(c("white"),0.5),
                            size = 1.5,
                            max.overlaps = 20,
                            fontface="italic") +
  ggrepel::geom_label_repel(data = fig8c_data |>
                              filter(allele_freq > 0.01 & splice_ai_score < 0 | gene_symbol == "HTT"| allele_freq > 0.001 & splice_ai_score < 0 & gene_symbol == "ZFP82"),
                            aes(label = gene_symbol),
                            ylim = c(-0.5,-2),
                            force = 5,
                            fill = alpha(c("white"),0.5),
                            size = 1.5,
                            max.overlaps = 20,
                            fontface="italic") +
  facet_wrap(vars(drug)) +
  scale_colour_brewer(palette = "Set2") +
  scale_x_log10() +
  expand_limits(x = 1, y = 1) +
  annotation_logticks(side = "b", outside = TRUE) +
  coord_cartesian(clip = "off") +
  labs(x = "MAF", y = "SpliceAI score") +
  theme_minimal() +
  theme(legend.position = "none",
        axis.text.x = element_text(vjust=-1.5),
        axis.title.x = element_text(vjust=-1.5))

)



```

## Figure 8d

```{r}
fig8d_data <- read_csv("data/fig8/fig8d_validation.csv") |>
  mutate(gene = str_replace(gene, "\n", " ")) |>
  mutate(gene = gsub("TENT2","<i>TENT2</i>",gene),
         gene = gsub("ZFP82","<i>ZFP82</i>",gene)) |>
  select(gene, snps, drug_treatment, cell_line_unique_number, peak_prop)


fig8d_data_n <- fig8d_data |>
  group_by(gene, snps, drug_treatment) |>
  summarise(N = length(unique(cell_line_unique_number)),
            n = n()) |>
  ungroup()



(fig8d_g <- fig8d_data |>
  ggplot(aes(x=as.factor(snps), y= peak_prop))+
  stat_summary(fun = median, geom = "crossbar", linewidth = 0.2)+
  ggforce::geom_sina(shape = 21) +
  geom_text(data = fig8d_data_n,
        aes(y = 1.2, label = paste0(N,"\n",n)),
        position = position_dodge(width = 1),
        size = 2.5) +
  geom_text(data = data.frame(drug_treatment = c("50 nM", "100 nM", "100 nM"),
                              gene = c(unique(fig8d_data$gene)[1],
                                       unique(fig8d_data$gene)),
                              label = rep("N= \nn=",3)),
            aes(x = c(0.8, 0.85,0.85), y = 1.2, label = label),
            size = 2.5) +
  scale_y_continuous(limits = c(0,1.35)) +
  facet_wrap(vars(gene,fct_rev(drug_treatment)))+
  labs(y = "Canonical band\nproportion", 
       x = "Genotype", 
       colour = "Branaplam\nconc.") +
  theme_bw() +
  theme(strip.background =element_rect(fill="white"),
        strip.text = ggtext::element_markdown()) 
)


```

```{r}

fig8d_data %>%
  split(paste(.$gene, .$drug_treatment)) %>%
  lapply(function(x) {
    x |>
      group_by(cell_line_unique_number, snps, drug_treatment) |>
      summarise(peak_prop = mean(peak_prop)) |>
      lm(peak_prop ~ snps, data = _) |>
      summary()
    
    })

```

## Figure 8 plots combined

```{r}

fig8_top <- fig8a_g + plot_spacer() +
  plot_layout(widths = c(2/3, 1/3))+ 
  plot_annotation(tag_levels = list(c("a", "b")))
fig8_middle <- fig8c_g+ 
  plot_annotation(tag_levels = list(c("c")))
fig8_bottom <- fig8d_g + plot_spacer() +
  plot_layout(widths = c(2/3, 1/3))+ 
  plot_annotation(tag_levels = list(c("d")))


ggsave("outputs/fig8_top.pdf",
       fig8_top,
       height = 2.5,
       width = 7.5)

ggsave("outputs/fig8_middle.pdf",
       fig8_middle,
       height = 3,
       width = 7.5)

ggsave("outputs/fig8_bottom.pdf",
       fig8_bottom,
       height = 2.5,
       width = 7.5)



```

# Sup Figure 2

```{r}
sup_fig2_data <- read_csv("data/sup_fig2/sup_fig2a_data.csv") |>
    mutate(treatment = fct_relevel(treatment,
                                 c("DMSO", "100","200"))) |>
  select(treatment, peak_prop, snp)

(sup_fig2_g <- sup_fig2_data |>
  ggplot(aes(treatment, peak_prop, colour = snp)) +
  geom_jitter() +
  stat_summary(fun = median, geom = "crossbar") +
  scale_colour_brewer(palette = "Set2") +
  labs(y = "Canonical\nband proportion", x = "Branaplam (nM)", colour = "variant") +
  theme_minimal())

ggsave("outputs/sup_fig2.png",
       sup_fig2_g,
       height = 2.5,
       width = 3.5)


```

# Sup Figure 3

## Sup Figure 3b

```{r}

sup_fig3b_data <- read_csv("data/fig3/fig3d_data_traces.csv") |> 
  mutate(facet_label = case_when(days == 0 ~ "Day 0",
                                 dox == "Non-induced" ~ "Day 28\nNon-induced",
                                 dox == "Induced" ~ "Day 28\nInduced"),
         facet_label = factor(facet_label,
                              levels = c(unique(facet_label)[1],
                                         unique(facet_label)[3],
                                         unique(facet_label)[2])),
         strain = fct_reorder(paste0("Cell strain #",strain), strain)
  ) |>
  select(repeats, rel_signal, dox,facet_label, strain, modal_repeat)

(sup_fig3b_g <-  sup_fig3b_data |>
  ggplot(aes(repeats, rel_signal, colour = dox)) +
  geom_vline(aes(xintercept = modal_repeat),
             lty = 3, colour = "blue",
             size = 1) +
  geom_line() +
  facet_grid(facet_label ~ strain) +
  scale_x_continuous(limits = c(NA, NA)) +
  labs(x = "CAG repeat",
       y = "",
       fill = "Day") +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        panel.grid.major.y  = element_blank(),
        panel.grid.minor.y  = element_blank(),
        legend.position = "none")
)



```

## Sup Figure 3c

```{r}

sup_fig3c_data <- read_csv("data/sup_fig3/sup_fig3c_data_flow.csv") |>
  select(group, FL46.A )



sup_fig3c_numbers <- sup_fig3c_data |>
  group_by(group) |>
  summarise(
    total = n(),
    total_pos = length(FL46.A[which(FL46.A + 1 >=10)]),
    total_neg = length(FL46.A[which(FL46.A + 1 < 10)]),
    prop_pos = total_pos / total,
    prop_neg = total_neg / total)

  (
sup_fig3c_g <- sup_fig3c_data |>  
  ggplot(aes(FL46.A + 1)) +
  geom_histogram(aes(y = ..density..),
                 bins = 1000) +
  geom_density(linewidth = 1) +
  geom_text(data = sup_fig3c_numbers,
            aes(x = 6*10^0, y = 1.5, label = paste(round(prop_neg, digits = 2)* 100, "%")),
            size = 3) +
  geom_text(data = sup_fig3c_numbers,
            aes(x = 17, y = 1.5, label = paste(round(prop_pos, digits = 2)* 100, "%")),
            size = 3) +
  facet_wrap(vars(group), ncol = 1) +
  geom_vline(xintercept = 10,
             lty = 3,
             colour = "blue") +
  scale_x_log10(label = scales::label_log()) +
  labs(x = "GFP signal",
       y = "") +
  theme_minimal() +
  theme(axis.text.y = element_blank(),
        panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank())


)


```

## Sup Figure 3d

```{r}

sup_fig3d_data <- read_csv("data/sup_fig3/sup_fig3d_data_metics.csv") |>
  select(dox_status, average_repeat_gain,metrics_grouping)
(
sup_fig3d_g <- sup_fig3d_data |>
  ggplot(aes(fct_rev(dox_status), average_repeat_gain, 
             colour = fct_rev(metrics_grouping))) +
  geom_boxplot(outlier.shape = NA) +
  ggforce::geom_sina() +
  scale_color_brewer(palette = "Set1") +
  theme_minimal() +
  labs(x = "", y = "Average repeat gain",
       colour = "Sorted population") 

)
```

```{r}

sup_fig3_top <- sup_fig3b_g + 
  plot_annotation(tag_levels = list(c("b")))

ggsave("outputs/sup_fig3_top.pdf",
       sup_fig3_top,
       width = 15,
       height = 6)

sup_fig3_bottom <- sup_fig3c_g + sup_fig3d_g +
  plot_layout(widths = c(2/3, 1/3)) + 
  plot_annotation(tag_levels = list(c("c", "d")))

ggsave("outputs/sup_fig3_bottom.pdf",
       sup_fig3_bottom,
       width = 7.5,
       height = 3)


```

###### change everything below!

## Sup Figure 4a

```{r}
sup_fig4_data <- read_csv("data/sup_fig4/sup_fig4_data.csv") |>
  select(target, grna, percent_reads, editing_outcome, total_reads)


(sup_fig4a_g <- sup_fig4_data |>
  ggplot() +
  geom_col(aes(target, percent_reads, fill = fct_rev(editing_outcome))) +
  geom_text(aes(x = target,
                y = 1.1,
                label = total_reads),
            size = 3) +
  facet_wrap(vars(grna), ncol = 2) +
  scale_fill_brewer(palette = "Pastel2") +
  labs(y = "Proportion of reads",
       fill = "Editing outcome",
       x = "") +
  theme_minimal() +
  theme(axis.text.x = element_text(face = "italic")))


```

## Sup Figure 4b

```{r}
sup_fig4b_data <- read_csv("data/sup_fig4/sup_fig4b_data_traces.csv") |>
  mutate(gene_geno = fct_relevel(gene_geno,
                                 "+/+", "MSH3-/-", "PMS1+/-", "PMS1-/-" )) |>
  group_by(gene_geno) |>
  mutate(modal_repeat = max(repeats[which(day == 0 & norm_signal == max(norm_signal))])) |>
  select(repeats, norm_signal, gene_geno, modal_repeat, day)


(sup_fig4b_g <- sup_fig4b_data  |>
  ggplot(aes(repeats, norm_signal, colour = gene_geno)) +
  geom_line(linewidth = 0.05) +
  geom_vline(aes(xintercept = modal_repeat),
             lty = 3) +
  facet_grid(day ~ gene_geno) +
  scale_color_manual(values = 
                       c(msh3_col,
                         msh3_col,
                         pms1_col,
                         pms1_col)
  ) +
  scale_y_continuous(minor_breaks = NULL) +
  scale_x_continuous(minor_breaks = NULL) +
  theme_minimal() +
  theme(legend.position = "none",
        axis.text.y = element_blank(),
        axis.text.x = element_text(size = 5),
        strip.text = element_text(size = 8.4),
        strip.text.x = element_text(face = "italic")) +
  labs(x = "CAG repeat", y = "Relative signal intensity", 
       title = "Clonal edited strains"))


```

```{r}

sup_fig4_g <- sup_fig4a_g / sup_fig4b_g +
  plot_layout(heights =  c(0.5, 1))+ 
  plot_annotation(tag_levels = "a")

ggsave("outputs/sup_fig4.pdf",
       sup_fig4_g,
       width = 7.5,
       height = 6)

```

# Sup Figure 5

## Sup Figure 5a

```{r}

sup_fig5a_data <- read_csv("data/sup_fig5/sup_fig5a_data_cytotox_growth.csv") |>
  select(Elapsed, drug_conc, mean_conf, exp, upper, lower)

sup_fig5a_labels <- sup_fig5a_data |>
  filter(Elapsed == max(Elapsed)) |>
  filter(drug_conc %in% c(0, 250,500))

(sup_fig5a_g <- sup_fig5a_data|>
  ggplot(aes(Elapsed, mean_conf)) +
  geom_ribbon(aes(ymax = upper,
                  ymin = lower,
                  fill = as.factor(drug_conc)),
              alpha = 0.3)+ 
  geom_point(aes(colour = as.factor(drug_conc))) +
  geom_line(aes(colour = as.factor(drug_conc))) +
  ggrepel::geom_text_repel(data = sup_fig5a_labels,
                           aes(label = as.factor(drug_conc)),
                           nudge_x = 7.5,
                           nudge_y = -1) +
  scale_color_viridis_d() +
  scale_fill_viridis_d() +
  facet_wrap(vars(exp)) +
  theme_minimal() +
  labs(y = "Confluency (%)",
       x = "Time (hours)",
       colour = "Drug\nconc.",
       fill = "Drug\nconc.")
)


```

## Sup Figure 5b

```{r}

sup_fig5b_data <- read_csv("data/sup_fig5/sup_fig5b_data_cytotox_death.csv") |>
  select(Elapsed, drug_conc, mean_count, exp, upper, lower)

sup_fig5b_labels <- sup_fig5b_data |>
  filter(Elapsed == max(Elapsed)) |>
  filter(drug_conc %in% c(500, 750, 1000))

(sup_fig5b_g <- sup_fig5b_data|>
  ggplot(aes(Elapsed, mean_count)) +
  geom_ribbon(aes(ymax = upper,
                  ymin = lower,
                  fill = as.factor(drug_conc)),
              alpha = 0.3)+ 
  geom_point(aes(colour = as.factor(drug_conc))) +
  geom_line(aes(colour = as.factor(drug_conc))) +
  ggrepel::geom_text_repel(data = sup_fig5b_labels,
                           aes(label = as.factor(drug_conc)),
                           nudge_x = 10,
                           min.segment.length = unit(0, 'lines')) +
  scale_color_viridis_d() +
  scale_fill_viridis_d() +
  facet_wrap(vars(exp)) +
  theme_minimal() +
  labs(y = "Dead cell count\nper field of view",
       x = "Time (hours)",
       colour = "Drug\nconc.",
       fill = "Drug\nconc.")
)


```

```{r}


sup_fig5 <- sup_fig5a_g / sup_fig5b_g + 
  plot_layout(guides = 'collect') +
  plot_annotation(tag_levels = "a")

ggsave("outputs/sup_fig5.png",
       sup_fig5,
       height = 7.5,
       width = 7.5)


```

# Sup Figure 11

## Sup Figure 11a

```{r}
sup_fig11a_data <- read_csv("data/sup_fig11/sup_fig11a_data.csv") |>
  mutate(genotype = gsub("HTT","<i>HTT</i>",genotype),
         genotype = gsub("PMS1","<i>PMS1</i>",genotype),
         genotype = gsub("delta", "&Delta;", genotype)) |>
  select(treatment, genotype, weighted_repeat_gain, cell_line)

(sup_fig11a_g <- sup_fig11a_data |>  
  mutate(treatment = str_replace(treatment, "nM\n", "nM "),
         treatment = fct_relevel(treatment,
                                 "DMSO"),
         genotype = fct_relevel(genotype,
                                "WT")) |>
  ggplot(aes(treatment, (weighted_repeat_gain / 32) * 7, 
             colour = as.factor(cell_line))) +
  geom_boxplot(outlier.shape = NA) +
  ggforce::geom_sina(size = 2,
                     alpha = 0.5) +
  scale_colour_viridis_d() +
  facet_wrap(vars(genotype), nrow = 1) +
  labs(x = "", y = "Average repeat gain\nper week") +
  theme_bw() +
  theme(
    strip.background = element_rect(fill = "white"),
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
    axis.text.y = element_text(margin = margin(0, 10, 0, 0)),
    strip.text = ggtext::element_markdown()
  ))


```

## Sup Figure 11b

```{r}

sup_fig11b_data <- read_csv("data/sup_fig11/sup_fig11b_data.csv") |>
  select(treatment, genotype, weighted_repeat_gain, cell_line)

(sup_fig11b_g <- sup_fig11b_data |>
  mutate(treatment = str_replace(treatment, "nM\n", "nM "),
         treatment = fct_relevel(treatment,
                                 "DMSO"),
         genotype = fct_relevel(genotype,
                                "WT"),
         genotype = gsub("delta", "&Delta;", genotype)) |>
  ggplot(aes(treatment, (weighted_repeat_gain /29) * 7, colour = as.factor(cell_line))) +
  geom_boxplot(position = position_dodge(),
               outlier.shape = NA) +
  ggforce::geom_sina(size = 2, alpha = 0.5) +
  scale_colour_viridis_d() +
  facet_wrap(vars(fct_rev(genotype)), nrow = 1, scales = "free_x") +
  labs(x = "", y = "Average repeat gain\nper week", colour = "Genotype clone") +
  theme_bw() +
  theme(
    strip.background = element_rect(fill = "white"),
    legend.position = "none",
    axis.text.x = element_text(
      angle = 45,
      hjust = 1,
      vjust = 1
    ),
    axis.text.y = element_text(margin = margin(0, 10, 0, 0)),
    strip.text = ggtext::element_markdown()
  )
)

```

```{r}


sup_fig11 <- sup_fig11a_g / sup_fig11b_g + 
  plot_annotation(tag_levels = list(c("a", "b")))

ggsave("outputs/sup_fig11.svg",
       sup_fig11,
       height = 5,
       width = 7.5)

```

# Sup Figure 12

```{r}

sup_fig12_data <- read_csv("data/sup_fig12/sup_fig12_data.csv") |>
       mutate(concentration = as.numeric(concentration)) |>
  select(concentration, proportion2, gene)

(sup_fig12_g <- sup_fig12_data |>
  ggplot(aes(concentration, proportion2)) +
  geom_point(shape = 21) +
  geom_smooth() +
  scale_x_log10()+
  facet_wrap(vars(gene), ncol = 2) +
  annotation_logticks(sides = "b") +
  labs(y = "Canonical band proportion", x = "Log10 branaplam (nM)") +
  theme_bw() +
  theme(panel.grid.major.x = element_line(),
        panel.grid.major.y = element_line(),
        strip.background =element_rect(fill="white"),
        strip.text = element_text(face = "italic")))

ggsave("outputs/sup_fig12.svg",
       sup_fig12_g,
       width = 7.5,
       height = 3.5)

```



```{r, include=FALSE}


object_names <- ls()

str_detect(object_names, "_data")

data_names <- object_names[which(str_detect(object_names, "_data") & !str_detect(object_names, "plot") & !str_detect(object_names, "_n"))]

data_list <- vector("list", length = length(data_names))

for (i in seq_along(data_names)) {
  data_list[[i]] <- .GlobalEnv[[data_names[i]]]
}

names(data_list) <- str_remove(data_names, "_data")

openxlsx::write.xlsx(data_list, file = "source_data.xlsx")


```


